{"ast":null,"code":"var initialState = {\n  data: []\n};\n\nvar Locations = function Locations() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'STORE_LOCATIONS':\n      return Object.assign({}, state, {\n        data: state.data.concat(action.data)\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar saveInput = function saveInput(state, action) {\n  switch (action.type) {\n    case 'SAVE_LOCATION':\n      return fetch(\"http://localhost:3000/locations\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(location)\n      });\n  }\n};\n\nexport default Locations;","map":{"version":3,"sources":["/mnt/c/Users/Family/Desktop/Projects/codechallenge2/src/reducers/LocationsReducer.js"],"names":["initialState","data","Locations","state","action","type","Object","assign","concat","saveInput","fetch","method","headers","body","JSON","stringify","location"],"mappings":"AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWO,MAAX,CAAkBJ,MAAM,CAACH,IAAzB;AADwB,OAAzB,CAAP;;AAGF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACN,KAAD,EAAQC,MAAR,EAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAQK,KAAK,CAAC,iCAAD,EAAoC;AAC/CC,QAAAA,MAAM,EAAE,MADuC;AAE/CC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFsC;AAG/CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,QAAf;AAHyC,OAApC,CAAb;AAFJ;AAQD,CATD;;AAWA,eAAed,SAAf","sourcesContent":["const initialState = {\r\n  data: [],\r\n};\r\n\r\nconst Locations = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'STORE_LOCATIONS':\r\n      return Object.assign({}, state, {\r\n        data: state.data.concat(action.data),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst saveInput = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SAVE_LOCATION':\r\n      return  fetch(\"http://localhost:3000/locations\", {\r\n        method: \"post\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(location)\r\n      })\r\n  }\r\n}\r\n\r\nexport default Locations;\r\n"]},"metadata":{},"sourceType":"module"}
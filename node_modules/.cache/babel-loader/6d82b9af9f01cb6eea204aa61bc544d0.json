{"ast":null,"code":"var initialState = {\n  data: []\n};\n\nvar Locations = function Locations() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'STORE_LOCATIONS':\n      return Object.assign({}, state, {\n        data: state.data.concat(action.data)\n      });\n\n    case 'SAVE_LOCATION':\n      fetch(\"http://localhost:3000/locations\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(action.data)\n      }).then(console.log(function (locations) {\n        return locations.json();\n      }));\n\n    /*return Object.assign({}, state, {\r\n      data: state.data.concat(action.data),\r\n    });*/\n\n    default:\n      return state;\n  }\n};\n\nexport default Locations;","map":{"version":3,"sources":["/mnt/c/Users/Family/Desktop/Projects/codechallenge2/src/reducers/LocationsReducer.js"],"names":["initialState","data","Locations","state","action","type","Object","assign","concat","fetch","method","headers","body","JSON","stringify","then","console","log","locations","json"],"mappings":"AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWO,MAAX,CAAkBJ,MAAM,CAACH,IAAzB;AADwB,OAAzB,CAAP;;AAGF,SAAK,eAAL;AACEQ,MAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF8B;AAGvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,MAAM,CAACH,IAAtB;AAHiC,OAApC,CAAL,CAKCc,IALD,CAKMC,OAAO,CAACC,GAAR,CAAY,UAAAC,SAAS;AAAA,eAAIA,SAAS,CAACC,IAAV,EAAJ;AAAA,OAArB,CALN;;AAMA;;;;AAGF;AACE,aAAOhB,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,SAAf","sourcesContent":["const initialState = {\r\n  data: []\r\n}\r\n\r\nconst Locations = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'STORE_LOCATIONS':\r\n      return Object.assign({}, state, {\r\n        data: state.data.concat(action.data),\r\n      });\r\n    case 'SAVE_LOCATION':\r\n      fetch(\"http://localhost:3000/locations\", {\r\n        method: \"post\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(action.data) \r\n      })\r\n      .then(console.log(locations => locations.json()))\r\n      /*return Object.assign({}, state, {\r\n        data: state.data.concat(action.data),\r\n      });*/\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Locations;\r\n"]},"metadata":{},"sourceType":"module"}
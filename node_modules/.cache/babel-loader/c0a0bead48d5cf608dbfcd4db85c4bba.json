{"ast":null,"code":"var _this = this;\n\nrequire('isomorphic-fetch');\n\nvar storeAllLocations = function storeAllLocations(locations) {\n  return {\n    type: 'STORE_LOCATIONS',\n    data: locations.locations\n  };\n};\n\nvar fetchAllLocations = function fetchAllLocations() {\n  return function (dispatch) {\n    return fetch('/locations', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    }).then(function (locations) {\n      return locations.json();\n    }).then(function (json) {\n      return dispatch(storeAllLocations(json));\n    });\n  };\n};\n\nvar centerMapOnLocation = function centerMapOnLocation() {\n  fetch(\"http://localhost:3000/locations\", {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return _this.setState({\n      center: [data.lat, data.lng],\n      zoom: 10\n    });\n  });\n};\n\nexport default fetchAllLocations;","map":{"version":3,"sources":["/mnt/c/Users/Family/Desktop/Projects/codechallenge2/src/actions/locationActions.js"],"names":["require","storeAllLocations","locations","type","data","fetchAllLocations","dispatch","fetch","headers","Accept","then","json","centerMapOnLocation","method","response","setState","center","lat","lng","zoom"],"mappings":";;AAAAA,OAAO,CAAC,kBAAD,CAAP;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD,EAAe;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,IAAI,EAAEF,SAAS,CAACA;AAFX,GAAP;AAID,CALD;;AAOA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOC,KAAK,CAAC,YAAD,EAAe;AACzBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AADgB,KAAf,CAAL,CAMJC,IANI,CAMC,UAAAR,SAAS;AAAA,aAAIA,SAAS,CAACS,IAAV,EAAJ;AAAA,KANV,EAOJD,IAPI,CAOC,UAAAC,IAAI;AAAA,aAAIL,QAAQ,CAACL,iBAAiB,CAACU,IAAD,CAAlB,CAAZ;AAAA,KAPL,CAAP;AAQD,GATD;AAUD,CAXD;;AAaA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCL,EAAAA,KAAK,CAAC,iCAAD,EAAoC;AACnCM,IAAAA,MAAM,EAAE,KAD2B;AAEnCL,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAF0B,GAApC,CAAL,CAIKE,IAJL,CAIU,UAAAI,QAAQ;AAAA,WAAIA,QAAQ,CAACH,IAAT,EAAJ;AAAA,GAJlB,EAKKD,IALL,CAKU,UAAAN,IAAI;AAAA,WAAI,KAAI,CAACW,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAG,CAACZ,IAAI,CAACa,GAAN,EAAYb,IAAI,CAACc,GAAjB,CAAV;AAAiCC,MAAAA,IAAI,EAAG;AAAxC,KAAd,CAAJ;AAAA,GALd;AAMD,CAPD;;AASA,eAAed,iBAAf","sourcesContent":["require('isomorphic-fetch');\r\n\r\nconst storeAllLocations = (locations) => {\r\n  return {\r\n    type: 'STORE_LOCATIONS',\r\n    data: locations.locations,\r\n  };\r\n};\r\n\r\nconst fetchAllLocations = () => {\r\n  return (dispatch) => {\r\n    return fetch('/locations', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    })\r\n      .then(locations => locations.json())\r\n      .then(json => dispatch(storeAllLocations(json)));\r\n  };\r\n};\r\n\r\nconst centerMapOnLocation = () => {\r\n  fetch(\"http://localhost:3000/locations\", {\r\n        method: \"get\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({center : [data.lat , data.lng], zoom : 10}))\r\n}\r\n\r\nexport default fetchAllLocations;\r\n"]},"metadata":{},"sourceType":"module"}
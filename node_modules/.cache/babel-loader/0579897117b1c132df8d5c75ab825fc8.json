{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/Family/Desktop/Projects/codechallenge2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/Family/Desktop/Projects/codechallenge2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/Family/Desktop/Projects/codechallenge2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/Family/Desktop/Projects/codechallenge2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/Family/Desktop/Projects/codechallenge2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/Family/Desktop/Projects/codechallenge2/src/components/Form.jsx\";\nimport React, { Component } from 'react';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"saveLocation\",\n    value: function saveLocation(data) {\n      //post data to server, response messages in case of validation error or server communication success/failure\n      fetch(\"http://localhost:3000/locations\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json(\"Location Sent\");\n      }).catch(function (response) {\n        return response.json(\"There was a problem sending the location to the server\");\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e, data) {\n      //I don't know Redux or Reducers that well so this is commented out to allow an automatic refresh so the location dot shows on the map\n      e.preventDefault(); //input validation logic\n\n      if (Math.abs(data.lat) <= 90 && Math.abs(data.lng) <= 180 && data.name.length >= 1) {\n        this.props.saveLocation(data);\n      } else {\n        this.setState({\n          errorMessage: \"One of your inputs are invalid, please ensure a name is entered and the coordinates are correct.\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Name\", React.createElement(\"input\", {\n        ref: function ref(input) {\n          _this2.name = input;\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Lat\", React.createElement(\"input\", {\n        ref: function ref(input) {\n          _this2.lat = input;\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Long\", React.createElement(\"input\", {\n        ref: function ref(input) {\n          _this2.lng = input;\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: function onClick(e) {\n          return _this2.submitForm(e, {\n            name: _this2.name.value,\n            lat: _this2.lat.value,\n            lng: _this2.lng.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Save\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.errorMessage)));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/mnt/c/Users/Family/Desktop/Projects/codechallenge2/src/components/Form.jsx"],"names":["React","Component","Form","state","errorMessage","data","fetch","method","headers","body","JSON","stringify","then","response","json","catch","e","preventDefault","Math","abs","lat","lng","name","length","props","saveLocation","setState","input","submitForm","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,I;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE;AADR,K;;;;;;iCAKKC,I,EAAM;AACjB;AACAC,MAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF8B;AAGvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHiC,OAApC,CAAL,CAKGO,IALH,CAKQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,CAAc,eAAd,CAAJ;AAAA,OALhB,EAMGC,KANH,CAMS,UAAAF,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,CAAc,wDAAd,CAAJ;AAAA,OANjB;AAOD;;;+BAEUE,C,EAAGX,I,EAAM;AAClB;AACAW,MAAAA,CAAC,CAACC,cAAF,GAFkB,CAGlB;;AACA,UAAIC,IAAI,CAACC,GAAL,CAASd,IAAI,CAACe,GAAd,KAAsB,EAAtB,IAA4BF,IAAI,CAACC,GAAL,CAASd,IAAI,CAACgB,GAAd,KAAsB,GAAlD,IAAyDhB,IAAI,CAACiB,IAAL,CAAUC,MAAV,IAAoB,CAAjF,EAAoF;AAClF,aAAKC,KAAL,CAAWC,YAAX,CAAwBpB,IAAxB;AACD,OAFD,MAGK;AACH,aAAKqB,QAAL,CAAc;AAACtB,UAAAA,YAAY,EAAG;AAAhB,SAAd;AACD;AACF;;;6BAEQ;AAAA;;AACP,aACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,QAAA,GAAG,EAAE,aAACuB,KAAD,EAAW;AAAE,UAAA,MAAI,CAACL,IAAL,GAAYK,KAAZ;AAAmB,SADvC;AAEE,QAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AACE,QAAA,GAAG,EAAE,aAACA,KAAD,EAAW;AAAE,UAAA,MAAI,CAACP,GAAL,GAAWO,KAAX;AAAkB,SADtC;AAEE,QAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,QAAA,GAAG,EAAE,aAACA,KAAD,EAAW;AAAE,UAAA,MAAI,CAACN,GAAL,GAAWM,KAAX;AAAkB,SADtC;AAEE,QAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAfF,EAsBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,iBAACX,CAAD;AAAA,iBAAO,MAAI,CAACY,UAAL,CAAgBZ,CAAhB,EAAmB;AACjCM,YAAAA,IAAI,EAAE,MAAI,CAACA,IAAL,CAAUO,KADiB;AAEjCT,YAAAA,GAAG,EAAE,MAAI,CAACA,GAAL,CAASS,KAFmB;AAGjCR,YAAAA,GAAG,EAAE,MAAI,CAACA,GAAL,CAASQ;AAHmB,WAAnB,CAAP;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAK1B,KAAL,CAAWC,YAAhB,CADF,CAhCF,CADF;AAsCD;;;;EArEgBH,S;;AAyEnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  //added state for error message updating\r\n  state = {\r\n    errorMessage: \"\"\r\n  }\r\n\r\n\r\n  saveLocation(data) {\r\n    //post data to server, response messages in case of validation error or server communication success/failure\r\n    fetch(\"http://localhost:3000/locations\", {\r\n      method: \"post\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(response => response.json(\"Location Sent\"))\r\n      .catch(response => response.json(\"There was a problem sending the location to the server\"))\r\n  };\r\n  \r\n  submitForm(e, data) {\r\n    //I don't know Redux or Reducers that well so this is commented out to allow an automatic refresh so the location dot shows on the map\r\n    e.preventDefault(); \r\n    //input validation logic\r\n    if (Math.abs(data.lat) <= 90 && Math.abs(data.lng) <= 180 && data.name.length >= 1) {\r\n      this.props.saveLocation(data)\r\n    }\r\n    else {\r\n      this.setState({errorMessage : \"One of your inputs are invalid, please ensure a name is entered and the coordinates are correct.\"})\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\">\r\n        <label>\r\n          Name\r\n          <input\r\n            ref={(input) => { this.name = input }}\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Lat\r\n          <input\r\n            ref={(input) => { this.lat = input }}\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Long\r\n          <input\r\n            ref={(input) => { this.lng = input }}\r\n            type=\"text\"\r\n            />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          onClick={(e) => this.submitForm(e, {\r\n            name: this.name.value,\r\n            lat: this.lat.value,\r\n            lng: this.lng.value\r\n          })}\r\n        >\r\n            Save\r\n        </button>\r\n        <label>\r\n          <h6>{this.state.errorMessage}</h6>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}